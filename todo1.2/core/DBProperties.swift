//
// Created by Krithik Roshan on 31/08/23.
//


class DBProperties: Identifiable {

    public static let baseUrl = "http://localhost:8080"
    public static let post = "POST"
    public static let get = "GET"
    public static let put = "PUT"
    public static let remove = "DELETE"
    public static let projectTable = "Project"
    public static let id = "id"
    public static let projectOrder = "projectOrder"
    public static let createProjectTable = " CREATE TABLE IF NOT EXISTS Project (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT NOT NULL, userId INTEGER, projectOrder INTEGER DEFAULT 0)"
    public static let insertProjectTable = "INSERT INTO Project (title, userId, projectOrder) VALUES ( ?, ?, ?)"
    public static let getAllProject = "SELECT id, title, userId, order FROM Project"
    public static let getProjects = "SELECT id, title, userId, projectOrder FROM Project WHERE userId = ? ORDER BY projectOrder"
    public static let removeProject = "DELETE FROM Project WHERE id = ?"
    public static let dropProjectTable = "DROP TABLE Project"
    public static let createCredentialTable = "CREATE TABLE IF NOT EXISTS Credential (id INTEGER PRIMARY KEY, email TEXT NOT NULL UNIQUE, password TEXT NOT NULL, hint TEXT)"
    public static let insertCredential =  "INSERT INTO Credential (id, email, password, hint) VALUES (?,?,?,?)"
    public static let validateUser = " SELECT id from Credential WHERE email = ? and password = ? "
    public static let updatePassword = " UPDATE Credential SET password = ? where email = ?"
    public static let getAllEmail = "SELECT email FROM USER"
    public static let updateCredential =  " UPDATE Credential SET email = ? , password = ? , hint = ? WHERE id = ?"
    public static let removeCredential = "DELETE FROM Credential WHERE id = ?"
    public static let dropCredentialTable = " DROP TABLE Credential"
    public static let createThemeTable = "CREATE TABLE IF NOT EXISTS Theme (id INTEGER PRIMARY KEY AUTOINCREMENT, color TEXT, fontSize DOUBLE,fontFamily TEXT)"
    public static let insertThemeTable = "INSERT INTO Theme (color, fontSize, fontFamily) values (?, ?, ?)"
    public static let updateThemeColor = "UPDATE Theme SET color = ?"
    public static let updateThemeFontSize = "UPDATE Theme SET fontSize = ?"
    public static let updateThemeFontFamily = "UPDATE Theme SET fontFamily = ?"
    public static let dropThemeTable = "DROP TABLE Theme"
    public static let getAppTheme = "SELECT id, color, fontSize, fontFamily FROM Theme"
    public static let themeTable = "Theme"
    public static let color = "color"
    public static let fontSize = "fontSize"
    public static let fontFamily = "fontFamily"
    public static let createTodoTable = "CREATE TABLE IF NOT EXISTS Todos (id INTEGER PRIMARY KEY AUTOINCREMENT, title TEXT, status INTEGER, position INTEGER, parentId INTEGER FOREIGN_KEY )"
    public static let dropTodoTable = "DROP TABLE Todos"
    public static let insertTodos = "INSERT INTO Todos ( title, status, parentId, position) VALUES ( ?, ?, ?, ?)"
    public static let updateCheckbox = "UPDATE Todos SET status = NOT status WHERE id = ?"
    public static let getTodos = "SELECT id, title, status, parentId, position FROM Todos WHERE parentId = ? ORDER BY position"
    public static let todoTable = "Todos"
    public static let position = "position"
    public static let removeTodos = "DELETE FROM Todos WHERE parentId = ?"
    public static let removeTodo = "DELETE FROM Todos WHERE id = ?"
    public static let createUserTable = "CREATE TABLE IF NOT EXISTS User (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, description TEXT, email TEXT)"
    public static let dropUserTable = " DROP TABLE User"
    public static let insertUser = " INSERT INTO Users ( name, description, email) VALUES (?, ?, ?)"
    public static let getUserIdByEmail = "SELECT id FROM Users WHERE email = ?"
    public static let updateUser = "UPDATE Users SET name = ? , description = ?, email = ?  WHERE id = ?"
    public static let getAllUser = "SELECT id, name, description, email FROM Users"
    public static let getUserById = "SELECT id, name, description, email FROM User WHERE id = ?"
    public static let getUserByEmail = "SELECT id, name, description, email FROM User WHERE email = ?"
    public static let removeUser = "DELETE FROM User WHERE id = ?"
}
